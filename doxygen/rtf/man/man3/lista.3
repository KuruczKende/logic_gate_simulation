.TH "lista< T >" 3 "nharamkkor_vs" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lista< T >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <ossz\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlista\fP ()"
.br
.ti -1c
.RI "\fBT\fP & \fBoperator[]\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBT\fP ertek)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBlista\fP< \fBT\fP > &\fBaddlist\fP)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBlength\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBrem\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdin\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBdinl\fP ()"
.br
.ti -1c
.RI "\fB~lista\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBlength\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP & \fBoperator[]\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBsize_t\fP ertek)"
.br
.ti -1c
.RI "\fBvoid\fP \fBrem\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBlista\fP< \fBmodule_t\fP * > &\fBaddlist\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBrem\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdin\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBlength\fP ()"
.br
.ti -1c
.RI "\fBprot_module_t\fP *& \fBoperator[]\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBprot_module_t\fP *ertek)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdin\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBchar\fP *ertek)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBlength\fP ()"
.br
.ti -1c
.RI "\fBchar\fP *& \fBoperator[]\fP (\fBsize_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdinl\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<\fBtypename\fP \fBT\fP > \fBlista\fP< \fBT\fP >\fB::lista\fP ()\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBlista\fP< \fBT\fP >::~\fBlista\fP ()\fR [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP \fBlista\fP< \fBchar\fP * >::add (\fBchar\fP * ertek)"

.SS "\fBvoid\fP \fBlista\fP< \fBmodule_t\fP * >::add (\fBlista\fP< \fBmodule_t\fP * > & addlist)"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBlista\fP< \fBT\fP >::add (\fBlista\fP< \fBT\fP > & addlist)"
Adds the elements from the given list to the current list\&.
.PP
\fBParameters\fP
.RS 4
\fIaddlist\fP the list to be added 
.RE
.PP

.SS "\fBvoid\fP \fBlista\fP< \fBprot_module_t\fP * >::add (\fBprot_module_t\fP * ertek)"

.SS "\fBvoid\fP \fBlista\fP< \fBsize_t\fP >::add (\fBsize_t\fP ertek)"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBlista\fP< \fBT\fP >::add (\fBT\fP ertek)"
Add a new element to the linked list\&.
.PP
\fBParameters\fP
.RS 4
\fIertek\fP the value to be added to the list 
.RE
.PP

.SS "\fBvoid\fP \fBlista\fP< \fBmodule_t\fP * >::din ()"

.SS "\fBvoid\fP \fBlista\fP< \fBprot_module_t\fP * >::din ()"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBlista\fP< \fBT\fP >::din ()"
A function that recursively deletes inner elements\&. 
.SS "\fBvoid\fP \fBlista\fP< \fBchar\fP * >::dinl ()"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBlista\fP< \fBT\fP >::dinl ()"
A function that recursively deletes inner lists\&. 
.SS "\fBsize_t\fP \fBlista\fP< \fBsize_t\fP >::length ()"

.SS "\fBsize_t\fP \fBlista\fP< \fBprot_module_t\fP * >::length ()"

.SS "\fBsize_t\fP \fBlista\fP< \fBchar\fP * >::length ()"

.SS "template<\fBtypename\fP \fBT\fP > \fBsize_t\fP \fBlista\fP< \fBT\fP >::length ()"
Calculates the length of the lista\&.
.PP
\fBReturns\fP
.RS 4
The length of the lista\&. 
.RE
.PP

.SS "\fBsize_t\fP & \fBlista\fP< \fBsize_t\fP >\fB::operator\fP[] (\fBsize_t\fP i)"

.SS "\fBprot_module_t\fP *& \fBlista\fP< \fBprot_module_t\fP * >\fB::operator\fP[] (\fBsize_t\fP i)"

.SS "\fBchar\fP *& \fBlista\fP< \fBchar\fP * >\fB::operator\fP[] (\fBsize_t\fP i)"

.SS "template<\fBtypename\fP \fBT\fP > \fBT\fP & \fBlista\fP< \fBT\fP >\fB::operator\fP[] (\fBsize_t\fP i)"
Retrieve the element at index i in the lista\&.
.PP
\fBParameters\fP
.RS 4
\fIi\fP the index of the element to retrieve
.RE
.PP
\fBReturns\fP
.RS 4
a reference to the element at index i 
.RE
.PP

.SS "\fBvoid\fP \fBlista\fP< \fBsize_t\fP >::rem (\fBsize_t\fP i)"

.SS "\fBvoid\fP \fBlista\fP< \fBmodule_t\fP * >::rem (\fBsize_t\fP i)"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBlista\fP< \fBT\fP >::rem (\fBsize_t\fP i)"
Removes an element at the specified index in the lista object\&.
.PP
\fBParameters\fP
.RS 4
\fIi\fP the index of the element to be removed 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for nharamkkor_vs from the source code\&.
