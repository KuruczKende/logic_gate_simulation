<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classwire__t" kind="class" language="C++" prot="public">
    <compoundname>wire_t</compoundname>
    <includes refid="wire_8h" local="no">wire.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classwire__t_1a9d73d04d723d0cc883e8ae0ad754fb63" prot="private" static="no" mutable="no">
        <type><ref refid="classlista" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t wire_t::ertek</definition>
        <argsstring></argsstring>
        <name>ertek</name>
        <qualifiedname>wire_t::ertek</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="5" column="13" bodyfile="wire.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwire__t_1ac29c1c1dbc6da65e4bf3738cb94a500b" prot="private" static="no" mutable="no">
        <type><ref refid="classlista" kindref="compound">lista</ref>&lt; <ref refid="classport__t" kindref="compound">port_t</ref> * &gt;</type>
        <definition>lista&lt;port_t*&gt; wire_t::ports</definition>
        <argsstring></argsstring>
        <name>ports</name>
        <qualifiedname>wire_t::ports</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="6" column="11" bodyfile="wire.h" bodystart="6" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classwire__t_1aa66dbdfdc6ccf987cf6e8cfa03a62b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wire_t::wire_t</definition>
        <argsstring>()</argsstring>
        <name>wire_t</name>
        <qualifiedname>wire_t::wire_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for the <ref refid="classwire__t" kindref="compound">wire_t</ref> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="8" column="5" bodyfile="wire.cpp" bodystart="7" bodyend="10"/>
        <references refid="ossz_8h_1a0caf0c0a211316c3867bcd0975c086b0" compoundref="ossz_8h" startline="10">undet</references>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1aa2554dfd22a8816510937796d04f7b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void wire_t::add</definition>
        <argsstring>(port_t *newport)</argsstring>
        <name>add</name>
        <qualifiedname>wire_t::add</qualifiedname>
        <param>
          <type><ref refid="classport__t" kindref="compound">port_t</ref> *</type>
          <declname>newport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new port to the wire.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newport</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the port to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="9" column="10" bodyfile="wire.cpp" bodystart="51" bodyend="53"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1a199d2d627c1f640220818cdcbc21d4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void wire_t::add</definition>
        <argsstring>(module_t *modulep, size_t idx)</argsstring>
        <name>add</name>
        <qualifiedname>wire_t::add</qualifiedname>
        <param>
          <type><ref refid="classmodule__t" kindref="compound">module_t</ref> *</type>
          <declname>modulep</declname>
        </param>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new port to the wire with the given module pointer and index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modulep</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the module to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the port to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="10" column="10" bodyfile="wire.cpp" bodystart="60" bodyend="62"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1a1c814f666ad69664219db12bd62c75b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void wire_t::set</definition>
        <argsstring>(uint8_t ertek)</argsstring>
        <name>set</name>
        <qualifiedname>wire_t::set</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">uint8_t</ref></type>
          <declname>ertek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the value of ertek.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ertek</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="11" column="10" bodyfile="wire.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1afb467831d8761cf47e16df0104f6715f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void wire_t::setin</definition>
        <argsstring>()</argsstring>
        <name>setin</name>
        <qualifiedname>wire_t::setin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the input of all the ports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="12" column="10" bodyfile="wire.cpp" bodystart="36" bodyend="39"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <references refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" compoundref="wire_8cpp" startline="36" endline="39">setin</references>
        <referencedby refid="classwire__t_1a7197d613264ea00f51325b593955c149" compoundref="wire_8cpp" startline="16" endline="24">doit</referencedby>
        <referencedby refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" compoundref="wire_8cpp" startline="36" endline="39">setin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1a82fa390ce85c6938dc54ab48ebd51cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t wire_t::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>wire_t::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the value of ertek. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="13" column="13" bodyfile="wire.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1a7197d613264ea00f51325b593955c149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void wire_t::doit</definition>
        <argsstring>(lista&lt; module_t * &gt; &amp;wait_for_do)</argsstring>
        <name>doit</name>
        <qualifiedname>wire_t::doit</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">lista</ref>&lt; <ref refid="classmodule__t" kindref="compound">module_t</ref> * &gt; &amp;</type>
          <declname>wait_for_do</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function that adds the modules of ports to a list of modules after setting inputs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wait_for_do</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="classmodule__t" kindref="compound">module_t</ref> pointers to modules, waiting to be processed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="14" column="10" bodyfile="wire.cpp" bodystart="16" bodyend="24"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <references refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" compoundref="wire_8cpp" startline="36" endline="39">setin</references>
      </memberdef>
      <memberdef kind="function" id="classwire__t_1a9c68e62ee57f625c992ce3b0d3aee94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wire_t::~wire_t</definition>
        <argsstring>()</argsstring>
        <name>~wire_t</name>
        <qualifiedname>wire_t::~wire_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor for the <ref refid="classwire__t" kindref="compound">wire_t</ref> class, delete all the ports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="wire.h" line="15" column="5" bodyfile="wire.cpp" bodystart="66" bodyend="68"/>
        <references refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" compoundref="lista_8cpp" startline="92" endline="96">lista&lt; T &gt;::din</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="wire.h" line="4" column="1" bodyfile="wire.h" bodystart="4" bodyend="16"/>
    <listofallmembers>
      <member refid="classwire__t_1aa2554dfd22a8816510937796d04f7b66" prot="public" virt="non-virtual"><scope>wire_t</scope><name>add</name></member>
      <member refid="classwire__t_1a199d2d627c1f640220818cdcbc21d4fb" prot="public" virt="non-virtual"><scope>wire_t</scope><name>add</name></member>
      <member refid="classwire__t_1a7197d613264ea00f51325b593955c149" prot="public" virt="non-virtual"><scope>wire_t</scope><name>doit</name></member>
      <member refid="classwire__t_1a9d73d04d723d0cc883e8ae0ad754fb63" prot="private" virt="non-virtual"><scope>wire_t</scope><name>ertek</name></member>
      <member refid="classwire__t_1a82fa390ce85c6938dc54ab48ebd51cc1" prot="public" virt="non-virtual"><scope>wire_t</scope><name>get</name></member>
      <member refid="classwire__t_1ac29c1c1dbc6da65e4bf3738cb94a500b" prot="private" virt="non-virtual"><scope>wire_t</scope><name>ports</name></member>
      <member refid="classwire__t_1a1c814f666ad69664219db12bd62c75b7" prot="public" virt="non-virtual"><scope>wire_t</scope><name>set</name></member>
      <member refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" prot="public" virt="non-virtual"><scope>wire_t</scope><name>setin</name></member>
      <member refid="classwire__t_1aa66dbdfdc6ccf987cf6e8cfa03a62b95" prot="public" virt="non-virtual"><scope>wire_t</scope><name>wire_t</name></member>
      <member refid="classwire__t_1a9c68e62ee57f625c992ce3b0d3aee94a" prot="public" virt="non-virtual"><scope>wire_t</scope><name>~wire_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
