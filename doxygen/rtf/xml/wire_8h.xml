<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="wire_8h" kind="file" language="C++">
    <compoundname>wire.h</compoundname>
    <includes refid="ossz_8h" local="yes">ossz.h</includes>
    <includedby refid="wire_8cpp" local="yes">wire.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
      </node>
      <node id="2">
        <label>ossz.h</label>
        <link refid="ossz_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>wire.h</label>
        <link refid="wire_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>wire.cpp</label>
        <link refid="wire_8cpp"/>
      </node>
      <node id="1">
        <label>wire.h</label>
        <link refid="wire_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classwire__t" prot="public">wire_t</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>WIRE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIRE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ossz_8h" kindref="compound">ossz.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classwire__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwire__t" kindref="compound">wire_t</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">uint8_t</ref><sp/>ertek;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">lista&lt;port_t*&gt;</ref><sp/>ports;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwire__t_1aa66dbdfdc6ccf987cf6e8cfa03a62b95" kindref="member">wire_t</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwire__t_1aa2554dfd22a8816510937796d04f7b66" kindref="member">add</ref>(<ref refid="classport__t" kindref="compound">port_t</ref>*<sp/><ref refid="classlista" kindref="compound">newport</ref>);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwire__t_1aa2554dfd22a8816510937796d04f7b66" kindref="member">add</ref>(<ref refid="classmodule__t" kindref="compound">module_t</ref>*<sp/>modulep,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwire__t_1a1c814f666ad69664219db12bd62c75b7" kindref="member">set</ref>(<ref refid="classlista" kindref="compound">uint8_t</ref><sp/>ertek);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" kindref="member">setin</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">uint8_t</ref><sp/><ref refid="classwire__t_1a82fa390ce85c6938dc54ab48ebd51cc1" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwire__t_1a7197d613264ea00f51325b593955c149" kindref="member">doit</ref>(<ref refid="classlista" kindref="compound">lista&lt;module_t*&gt;</ref>&amp;<sp/><ref refid="classlista" kindref="compound">wait_for_do</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwire__t_1a9c68e62ee57f625c992ce3b0d3aee94a" kindref="member">~wire_t</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal">};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="wire.h"/>
  </compounddef>
</doxygen>
