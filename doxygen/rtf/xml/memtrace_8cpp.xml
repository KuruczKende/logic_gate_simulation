<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="memtrace_8cpp" kind="file" language="C++">
    <compoundname>memtrace.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">ctype.h</includes>
    <incdepgraph>
      <node id="1">
        <label>memtrace.cpp</label>
        <link refid="memtrace_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Memoriaszivargas-detektor</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Keszitette:<sp/>Peregi<sp/>Tamas,<sp/>BME<sp/>IIT,<sp/>2011</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>petamas@iit.bme.hu</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Kanari:<sp/><sp/><sp/><sp/><sp/>Szeberenyi<sp/>Imre,<sp/>2013.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">VS<sp/>2012:<sp/><sp/><sp/><sp/>Szeber√©nyi<sp/>Imre,<sp/>2015.,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">mem_dump:<sp/><sp/><sp/>2016.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">meset<sp/>felszabaditaskor:<sp/>2018.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">typo:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2019.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*definialni<sp/>kell,<sp/>ha<sp/>nem<sp/>paracssorbol<sp/>allitjuk<sp/>be<sp/>(-DMEMTRACE)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>MEMTRACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_CRT_SECURE_NO_WARNINGS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FROM_MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMALLOC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FCALLOC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FREALLOC<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFREE<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNEW<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FDELETE<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNEWARR<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FDELETEARR<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP(a,d)<sp/>(((a)&lt;=3<sp/>&amp;&amp;<sp/>(d)&lt;=3)<sp/>||<sp/>((d)==(a)+1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PU(p)<sp/><sp/><sp/>((char*)p+CANARY_LEN)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mem<sp/>pointerbol<sp/>user<sp/>poi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>P(pu)<sp/><sp/><sp/>((char*)pu-CANARY_LEN)<sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>pointerbol<sp/>mem<sp/>poi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XSTR(s)<sp/>STR(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR(s)<sp/><sp/>#s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Segedfuggvenyek<sp/>es<sp/>egyebek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">FILE</ref><sp/>*<ref refid="classlista" kindref="compound">fperror</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">canary_byte1</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">canary_byte2</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;K&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">random_byte</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<ref refid="classlista" kindref="compound">FALSE</ref>,<ref refid="classlista" kindref="compound">TRUE</ref>}<sp/><ref refid="classlista" kindref="compound">BOOL</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">pretty</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;malloc(&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;calloc(&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;realloc(&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;free(&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;new&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;delete&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new[]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;delete[]&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">basename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">s1</ref>,*<ref refid="classlista" kindref="compound">s2</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">s1</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">strrchr</ref>(<ref refid="classlista" kindref="compound">s</ref>,</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">s1</ref>==<ref refid="classlista" kindref="compound">NULL</ref>)<sp/><ref refid="classlista" kindref="compound">s1</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">s</ref>;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">s1</ref>++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">s2</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">strrchr</ref>(<ref refid="classlista" kindref="compound">s1</ref>,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">s2</ref>==<ref refid="classlista" kindref="compound">NULL</ref>)<sp/><ref refid="classlista" kindref="compound">s2</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">s1</ref>;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">s2</ref>++;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">s2</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">StrCpy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/><ref refid="classlista" kindref="compound">to</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">from</ref>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">from</ref><sp/>==<sp/><ref refid="classlista" kindref="compound">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classlista" kindref="compound">to</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">NULL</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classlista" kindref="compound">to</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classlista" kindref="compound">malloc</ref>(<ref refid="classlista" kindref="compound">strlen</ref>(<ref refid="classlista" kindref="compound">from</ref>)+1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="classlista" kindref="compound">to</ref>)<sp/><ref refid="classlista" kindref="compound">strcpy</ref>(*<ref refid="classlista" kindref="compound">to</ref>,<sp/><ref refid="classlista" kindref="compound">from</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">to</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">canary_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="classlista" kindref="compound">malloc</ref>(<ref refid="classlista" kindref="compound">size</ref>+2*<ref refid="classlista" kindref="compound">CANARY_LEN</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">memset</ref>(<ref refid="classlista" kindref="compound">p</ref>,<sp/><ref refid="classlista" kindref="compound">canary_byte1</ref>,<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">memset</ref>(<ref refid="classlista" kindref="compound">p</ref>+<ref refid="classlista" kindref="compound">CANARY_LEN</ref>,<sp/><ref refid="classlista" kindref="compound">data</ref>,<sp/><ref refid="classlista" kindref="compound">size</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">memset</ref>(<ref refid="classlista" kindref="compound">p</ref>+<ref refid="classlista" kindref="compound">CANARY_LEN</ref>+<ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">canary_byte2</ref>,<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">p</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">chk_canary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">p</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">pc</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classlista" kindref="compound">p</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">i</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">i</ref><sp/>=<sp/>0;<sp/><ref refid="classlista" kindref="compound">i</ref><sp/>&lt;<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>;<sp/><ref refid="classlista" kindref="compound">i</ref>++)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">pc</ref>[<ref refid="classlista" kindref="compound">i</ref>]<sp/>!=<sp/><ref refid="classlista" kindref="compound">canary_byte1</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">pc</ref><sp/>+=<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>+<ref refid="classlista" kindref="compound">size</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">i</ref><sp/>=<sp/>0;<sp/><ref refid="classlista" kindref="compound">i</ref><sp/>&lt;<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>;<sp/><ref refid="classlista" kindref="compound">i</ref>++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">pc</ref>[<ref refid="classlista" kindref="compound">i</ref>]<sp/>!=<sp/><ref refid="classlista" kindref="compound">canary_byte2</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">f</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>allocator<sp/>func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="classlista" kindref="compound">call_t</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista" kindref="compound">pack</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">f</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista" kindref="compound">ret</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">ret</ref>.f<sp/>=<sp/><ref refid="classlista" kindref="compound">f</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">ret</ref>.line<sp/>=<sp/><ref refid="classlista" kindref="compound">line</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">StrCpy</ref>(&amp;<ref refid="classlista" kindref="compound">ret</ref>.par_txt,<sp/><ref refid="classlista" kindref="compound">par_txt</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">StrCpy</ref>(&amp;<ref refid="classlista" kindref="compound">ret</ref>.file,<sp/><ref refid="classlista" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">ret</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">print_call</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">msg</ref>,<sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista" kindref="compound">call</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">msg</ref>)<sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">msg</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">pretty</ref>[<ref refid="classlista" kindref="compound">call</ref>.f]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">call</ref>.f<sp/>&lt;=<sp/>3)<sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,</highlight><highlight class="stringliteral">&quot;<sp/>@<sp/>%s:&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">call</ref>.file<sp/>?<sp/><ref refid="classlista" kindref="compound">basename</ref>(<ref refid="classlista" kindref="compound">call</ref>.file)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">call</ref>.line<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.line<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memoriateruletet<sp/>dump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">dump_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">mem</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">can_len</ref>,<sp/><ref refid="classlista" kindref="compound">FILE</ref>*<sp/><ref refid="classlista" kindref="compound">fp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">m</ref>=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classlista" kindref="compound">mem</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">s</ref>,<sp/><ref refid="classlista" kindref="compound">o</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">can_len</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>(addr:<sp/>%p<sp/>kanari<sp/>hossz:<sp/>%d):\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">m</ref>+<ref refid="classlista" kindref="compound">can_len</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlista" kindref="compound">can_len</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Dump:<sp/>(addr:<sp/>%p)<sp/>\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">m</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">size</ref><sp/>+=<sp/>2*<ref refid="classlista" kindref="compound">can_len</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">s</ref><sp/>=<sp/>0;<sp/><ref refid="classlista" kindref="compound">s</ref><sp/>&lt;<sp/>(<ref refid="classlista" kindref="compound">size</ref>+15)/16;<sp/><ref refid="classlista" kindref="compound">s</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%04x:%c<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">s</ref>*16,<sp/><ref refid="classlista" kindref="compound">s</ref>*16<sp/>&lt;<sp/><ref refid="classlista" kindref="compound">can_len</ref><sp/>||<sp/><ref refid="classlista" kindref="compound">s</ref>*16<sp/>&gt;=<sp/><ref refid="classlista" kindref="compound">size</ref>-<ref refid="classlista" kindref="compound">can_len</ref><sp/>?<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">o</ref><sp/>=<sp/>0;<sp/><ref refid="classlista" kindref="compound">o</ref><sp/>&lt;<sp/>16;<sp/><ref refid="classlista" kindref="compound">o</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">o</ref><sp/>==<sp/>8)<sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">s</ref>*16+<ref refid="classlista" kindref="compound">o</ref><sp/>&lt;<sp/><ref refid="classlista" kindref="compound">size</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%02x<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">m</ref>[<ref refid="classlista" kindref="compound">s</ref>*16+<ref refid="classlista" kindref="compound">o</ref>]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">o</ref><sp/>=<sp/>0;<sp/><ref refid="classlista" kindref="compound">o</ref><sp/>&lt;<sp/>16;<sp/><ref refid="classlista" kindref="compound">o</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">s</ref>*16+<ref refid="classlista" kindref="compound">o</ref><sp/>&lt;<sp/><ref refid="classlista" kindref="compound">size</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">isprint</ref>(<ref refid="classlista" kindref="compound">m</ref>[<ref refid="classlista" kindref="compound">s</ref>*16+<ref refid="classlista" kindref="compound">o</ref>])<sp/>?<sp/><ref refid="classlista" kindref="compound">m</ref>[<ref refid="classlista" kindref="compound">s</ref>*16+<ref refid="classlista" kindref="compound">o</ref>]<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">mem_dump</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="classlista" kindref="compound">mem</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">FILE</ref>*<sp/><ref refid="classlista" kindref="compound">fp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">dump_memory</ref>(<ref refid="classlista" kindref="compound">mem</ref>,<sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/>0,<sp/><ref refid="classlista" kindref="compound">fp</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">BOOL</ref><sp/><ref refid="classlista" kindref="compound">dying</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">die</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">msg</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">a</ref>,<sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_ERRFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fperror</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">fopen</ref>(<ref refid="classlista" kindref="compound">XSTR</ref>(<ref refid="classlista" kindref="compound">MEMTRACE_ERRFILE</ref>),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">msg</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\tPointer:\t%p&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">size</ref>)<sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,</highlight><highlight class="stringliteral">&quot;<sp/>(%d<sp/>byte)&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlista" kindref="compound">size</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">a</ref>)<sp/><ref refid="classlista" kindref="compound">print_call</ref>(</highlight><highlight class="stringliteral">&quot;\tFoglalas:\t&quot;</highlight><highlight class="normal">,<sp/>*<ref refid="classlista" kindref="compound">a</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">d</ref>)<sp/><ref refid="classlista" kindref="compound">print_call</ref>(</highlight><highlight class="stringliteral">&quot;\tFelszabaditas:\t&quot;</highlight><highlight class="normal">,<sp/>*<ref refid="classlista" kindref="compound">d</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/><ref refid="classlista" kindref="compound">dump_memory</ref>(<ref refid="classlista" kindref="compound">p</ref>,<sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">CANARY_LEN</ref>,<sp/><ref refid="classlista" kindref="compound">fperror</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">dying</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">TRUE</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">exit</ref>(120);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">initialize</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MEMTRACE_TO_MEMORY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classlista" kindref="compound">_registry_item</ref><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mem<sp/>pointer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>;<sp/></highlight><highlight class="comment">/*<sp/>size*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">call</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classlista" kindref="compound">_registry_item</ref><sp/>*<sp/>next;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">registry_item</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">registry</ref>;<sp/></highlight><highlight class="comment">/*sentinel*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">print_registry_item</ref>(<ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">print_registry_item</ref>(<ref refid="classlista" kindref="compound">p</ref>-&gt;next);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t%p%5d<sp/>byte<sp/>&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">p</ref>-&gt;p,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlista" kindref="compound">p</ref>-&gt;size);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">print_call</ref>(<ref refid="classlista" kindref="compound">NULL</ref>,<sp/><ref refid="classlista" kindref="compound">p</ref>-&gt;call);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">p</ref>-&gt;call.par_txt)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">p</ref>-&gt;call.par_txt);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">p</ref>-&gt;call.file)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">p</ref>-&gt;call.file);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ha<sp/>nincs<sp/>hiba,<sp/>akkor<sp/>0-val<sp/>t√©r<sp/>vissza<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">mem_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">dying</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>c√≠mz√©si<sp/>hiba<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">registry</ref>.next)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*szivarog*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_ERRFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fperror</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fopen</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">XSTR</ref>(<ref refid="classlista" kindref="compound">MEMTRACE_ERRFILE</ref>),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">fperror</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Szivargas:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">print_registry_item</ref>(<ref refid="classlista" kindref="compound">registry</ref>.next);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry</ref>.next<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mem√≥ria<sp/>fogy√°s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">/*MEMTRACE_TO_MEMORY*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MEMTRACE_TO_FILE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">FILE</ref><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">trace_file</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>register/unregister<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">allocated_blks</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">allocated_blocks</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">allocated_blks</ref>;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">BOOL</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">register_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista" kindref="compound">call</ref>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">allocated_blks</ref>++;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%p\t%d\t%s%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">pretty</ref>[<ref refid="classlista" kindref="compound">call</ref>.f],<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">call</ref>.f<sp/>&lt;=<sp/>3)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t%d\t%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">call</ref>.line,<sp/><ref refid="classlista" kindref="compound">call</ref>.file<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.file<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fflush</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">n</ref><sp/>=<sp/>(<ref refid="classlista" kindref="compound">registry_item</ref>*)<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">registry_item</ref>));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">n</ref>==<ref refid="classlista" kindref="compound">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;p<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;size<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;call<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">call</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next<sp/>=<sp/><ref refid="classlista" kindref="compound">registry</ref>.next;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry</ref>.next<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">find_registry_item</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<ref refid="classlista" kindref="compound">n</ref><sp/>=<sp/>&amp;<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">registry</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next<sp/>&amp;&amp;<sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next-&gt;p<sp/>!=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref><sp/>;<sp/><ref refid="classlista" kindref="compound">n</ref>=<ref refid="classlista" kindref="compound">n</ref>-&gt;next);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">unregister_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref>,<sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista" kindref="compound">call</ref>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%p\t%d\t%s%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>),<sp/>-1,<sp/><ref refid="classlista" kindref="compound">pretty</ref>[<ref refid="classlista" kindref="compound">call</ref>.f],<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.par_txt<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">call</ref>.f<sp/>&lt;=<sp/>3)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,</highlight><highlight class="stringliteral">&quot;\t%d\t%s\n&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">call</ref>.line,<sp/><ref refid="classlista" kindref="compound">call</ref>.file<sp/>?<sp/><ref refid="classlista" kindref="compound">call</ref>.file<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fflush</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">n</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">find_registry_item</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">n</ref>-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">allocated_blks</ref>--;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<sp/><ref refid="classlista" kindref="compound">r</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next<sp/>=<sp/><ref refid="classlista" kindref="compound">r</ref>-&gt;next;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">COMP</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;call.f,<ref refid="classlista" kindref="compound">call</ref>.f))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">chk</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">chk_canary</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;p,<sp/><ref refid="classlista" kindref="compound">r</ref>-&gt;size);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">chk</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;Blokk<sp/>elott<sp/>serult<sp/>a<sp/>memoria:&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">r</ref>-&gt;p,<ref refid="classlista" kindref="compound">r</ref>-&gt;size,&amp;<ref refid="classlista" kindref="compound">r</ref>-&gt;call,&amp;<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">chk</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;Blokk<sp/>utan<sp/>serult<sp/>a<sp/>memoria&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">r</ref>-&gt;p,<ref refid="classlista" kindref="compound">r</ref>-&gt;size,&amp;<ref refid="classlista" kindref="compound">r</ref>-&gt;call,&amp;<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*rendben<sp/>van<sp/>minden*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">call</ref>.par_txt)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">call</ref>.par_txt);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">r</ref>-&gt;call.par_txt)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;call.par_txt);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">call</ref>.file)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">call</ref>.file);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">r</ref>-&gt;call.file)<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;call.file);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memset</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;p),<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">r</ref>-&gt;size);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">r</ref>-&gt;p)[<ref refid="classlista" kindref="compound">r</ref>-&gt;size-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">r</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*hibas<sp/>felszabaditas*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;Hibas<sp/>felszabaditas:&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">r</ref>-&gt;p,<ref refid="classlista" kindref="compound">r</ref>-&gt;size,&amp;<ref refid="classlista" kindref="compound">r</ref>-&gt;call,&amp;<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;Nem<sp/>letezo,<sp/>vagy<sp/>mar<sp/>felszabaditott<sp/>adat<sp/>felszabaditasa:&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlista" kindref="compound">p</ref>,<sp/>0,<ref refid="classlista" kindref="compound">NULL</ref>,&amp;<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>C-st√≠lus√∫<sp/>mem√≥riakezel√©s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">canary_malloc</ref>(<ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">random_byte</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">register_memory</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FMALLOC</ref>,<ref refid="classlista" kindref="compound">par_txt</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">count</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">size</ref><sp/>*=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">canary_malloc</ref>(<ref refid="classlista" kindref="compound">size</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">register_memory</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FCALLOC</ref>,<ref refid="classlista" kindref="compound">par_txt</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">pu</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">pu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">unregister_memory</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">pu</ref>),<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FFREE</ref>,<ref refid="classlista" kindref="compound">par_txt</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">pu</ref>));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*free(NULL)<sp/>eset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,</highlight><highlight class="stringliteral">&quot;%s\t%d\t%10s\t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">,-1,<ref refid="classlista" kindref="compound">pretty</ref>[<ref refid="classlista" kindref="compound">FFREE</ref>]);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fprintf</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>,</highlight><highlight class="stringliteral">&quot;%d\t%s\n&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref><sp/>?<sp/><ref refid="classlista" kindref="compound">file</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fflush</ref>(<ref refid="classlista" kindref="compound">trace_file</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>ALLOW_FREE_NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">call</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">call</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FFREE</ref>,<ref refid="classlista" kindref="compound">par_txt</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;free(NULL)<sp/>hivasa:&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">NULL</ref>,0,<ref refid="classlista" kindref="compound">NULL</ref>,&amp;<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">/*C-blokk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">old</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">oldsize</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry_item</ref><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">n</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">find_registry_item</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">old</ref>));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">n</ref>)<sp/><ref refid="classlista" kindref="compound">oldsize</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">n</ref>-&gt;next-&gt;size;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">canary_malloc</ref>(<ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">random_byte</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">realloc</ref>(<ref refid="classlista" kindref="compound">old</ref>,<sp/><ref refid="classlista" kindref="compound">size</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Ha<sp/>sikerult<sp/>a<sp/>foglalas,<sp/>regisztraljuk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">register_memory</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FREALLOC</ref>,<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/><ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">old</ref>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">cpsize</ref><sp/>=<sp/>2*<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">CANARY_LEN</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">oldsize</ref><sp/>&lt;<sp/><ref refid="classlista" kindref="compound">size</ref>)<sp/><ref refid="classlista" kindref="compound">cpsize</ref><sp/>+=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">oldsize</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">cpsize</ref><sp/>+=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memcpy</ref>(<ref refid="classlista" kindref="compound">p</ref>,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">old</ref>),<sp/><ref refid="classlista" kindref="compound">cpsize</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">unregister_memory</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">old</ref>),<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">FREALLOC</ref>,<sp/><ref refid="classlista" kindref="compound">par_txt</ref>,<sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/><ref refid="classlista" kindref="compound">file</ref>));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">free</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">old</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">/*MEMTRACE_C*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>C++-st√≠lus√∫<sp/>mem√≥riakezel√©s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">std::new_handler</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">_new_handler</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">_set_new_handler</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">std::new_handler</ref><sp/><ref refid="classlista" kindref="compound">h</ref>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">_new_handler</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">call_t</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">delete_call</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">BOOL</ref><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">delete_called</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">set_delete_call</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">delete_call</ref>=<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(0,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>);<sp/></highlight><highlight class="comment">/*func<sp/>√©rt√©ke<sp/>l√©nyegtelen,<sp/>majd<sp/>fel√ºl√≠rjuk*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">delete_called</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_new</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">file</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">func</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">p</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">canary_malloc</ref>(<ref refid="classlista" kindref="compound">size</ref>,<sp/><ref refid="classlista" kindref="compound">random_byte</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">register_memory</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(<ref refid="classlista" kindref="compound">func</ref>,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">PU</ref>(<ref refid="classlista" kindref="compound">p</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlista" kindref="compound">_new_handler</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">std::bad_alloc</ref>();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">_new_handler</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">traced_delete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista" kindref="compound">pu</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">func</ref>)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">pu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*kiolvasom<sp/>call-t,<sp/>ha<sp/>van*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::call_t</ref><sp/><ref refid="classlista" kindref="compound">call</ref><sp/>=<sp/><ref refid="classlista" kindref="compound">delete_called</ref><sp/>?<sp/>(<ref refid="classlista" kindref="compound">delete_call</ref>.f=<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">func</ref>,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">delete_call</ref>)<sp/>:<sp/><ref refid="classlista" kindref="compound">pack</ref>(<ref refid="classlista" kindref="compound">func</ref>,<ref refid="classlista" kindref="compound">NULL</ref>,0,<ref refid="classlista" kindref="compound">NULL</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::unregister_memory</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">pu</ref>),<ref refid="classlista" kindref="compound">call</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">free</ref>(<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">P</ref>(<ref refid="classlista" kindref="compound">pu</ref>));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">delete_called</ref>=<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">file</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_BADALLOC</ref><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_new</ref>(<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>,<ref refid="classlista" kindref="compound">FNEW</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">line</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">file</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_BADALLOC</ref><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_new</ref>(<ref refid="classlista" kindref="compound">size</ref>,<ref refid="classlista" kindref="compound">line</ref>,<ref refid="classlista" kindref="compound">file</ref>,<ref refid="classlista" kindref="compound">FNEWARR</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_BADALLOC</ref><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_new</ref>(<ref refid="classlista" kindref="compound">size</ref>,0,<ref refid="classlista" kindref="compound">NULL</ref>,<ref refid="classlista" kindref="compound">FNEW</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">size</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_BADALLOC</ref><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_new</ref>(<ref refid="classlista" kindref="compound">size</ref>,0,<ref refid="classlista" kindref="compound">NULL</ref>,<ref refid="classlista" kindref="compound">FNEWARR</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_NOTHING</ref><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_delete</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">FDELETE</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>)<sp/><ref refid="classlista" kindref="compound">THROW_NOTHING</ref><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_delete</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">FDELETEARR</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Visual<sp/>C++<sp/>2012<sp/>miatt<sp/>kell,<sp/>mert<sp/>h√°klis,<sp/>hogy<sp/>nincs<sp/>megfelel≈ë<sp/>delete,<sp/>b√°r<sp/>senki<sp/>sem<sp/>haszn√°lja<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">int</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classlista" kindref="compound">THROW_NOTHING</ref><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_delete</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">FDELETE</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">p</ref>,<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">int</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classlista" kindref="compound">THROW_NOTHING</ref><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">memtrace::traced_delete</ref>(<ref refid="classlista" kindref="compound">p</ref>,<ref refid="classlista" kindref="compound">FDELETE</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">/*MEMTRACE_CPP*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="classlista" kindref="compound">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlista" kindref="compound">BOOL</ref><sp/><ref refid="classlista" kindref="compound">first</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlista" kindref="compound">first</ref>)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">fperror</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">stderr</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">random_byte</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">char</ref>)<ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">time</ref>(<ref refid="classlista" kindref="compound">NULL</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">first</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">dying</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">registry</ref>.next<sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>!defined(USE_ATEXIT_OBJECT)<sp/>&amp;&amp;<sp/>defined(MEMTRACE_AUTO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">atexit</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))<ref refid="classlista" kindref="compound">mem_check</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">trace_file</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">fopen</ref>(</highlight><highlight class="stringliteral">&quot;memtrace.dump&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">_new_handler</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">delete_called</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlista" kindref="compound">delete_call</ref><sp/>=<sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">pack</ref>(0,<ref refid="classlista" kindref="compound">NULL</ref>,0,<ref refid="classlista" kindref="compound">NULL</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MEMTRACE_TO_MEMORY)<sp/>&amp;&amp;<sp/>defined(USE_ATEXIT_OBJECT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">atexit_class::counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" kindref="member">atexit_class::err</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><ref refid="classlista" kindref="compound">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="memtrace.cpp"/>
  </compounddef>
</doxygen>
