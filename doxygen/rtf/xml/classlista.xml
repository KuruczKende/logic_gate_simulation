<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classlista" kind="class" language="C++" prot="public">
    <compoundname>lista</compoundname>
    <includes refid="ossz_8h" local="no">ossz.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="classlista" kindref="compound">typename</ref> <ref refid="classlista" kindref="compound">T</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlista_1a1662927cc34d5705fca82b562b6cc9db" prot="private" static="no" mutable="no">
        <type><ref refid="classlista" kindref="compound">T</ref></type>
        <definition>T lista&lt; T &gt;::elem</definition>
        <argsstring></argsstring>
        <name>elem</name>
        <qualifiedname>lista::elem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="14" column="7" bodyfile="ossz.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlista_1ad0b6abe961976a78f19b24f5f41fc348" prot="private" static="no" mutable="no">
        <type><ref refid="classlista" kindref="compound">lista</ref> *</type>
        <definition>lista* lista&lt; T &gt;::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <qualifiedname>lista::next</qualifiedname>
        <initializer>=<ref refid="classlista" kindref="compound">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="15" column="11" bodyfile="ossz.h" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classlista_1ab9adc555787a1f3ae0c702c7f346f913" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">T</ref> *</type>
        <definition>T * lista&lt; T &gt;::getin</definition>
        <argsstring>(size_t i)</argsstring>
        <name>getin</name>
        <qualifiedname>lista::getin</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the element at index i in the lista.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the element to retrieve</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the element at index i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="16" column="7" bodyfile="lista.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lista&lt; T &gt;::lista</definition>
        <argsstring>()</argsstring>
        <name>lista</name>
        <qualifiedname>lista::lista</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="18" column="5" bodyfile="ossz.h" bodystart="18" bodyend="18"/>
        <referencedby refid="classlista_1aa7190850a17e42ae410130a9260f70ae" compoundref="lista_8cpp" startline="245" endline="252">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1a7e56ae1942730012157db8ebd0ba2e72" compoundref="lista_8cpp" startline="229" endline="236">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1aa870ba8bee0571905ddf13989a20771f" compoundref="lista_8cpp" startline="122" endline="129">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ab44d8e6ed4c39cb1c0cf792429db848e" compoundref="nharamkor__vs_8cpp" startline="491" endline="508">input_handler</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a28f543ce27108ae4de42d9991865237e" compoundref="nharamkor__vs_8cpp" startline="393" endline="400">input_handler_module</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ab7c916fb6815401293901bf9e02feb5d" compoundref="nharamkor__vs_8cpp" startline="412" endline="422">input_handler_read</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1aedc7074de3b40368806c1c432f215d92" compoundref="nharamkor__vs_8cpp" startline="429" endline="445">input_handler_write</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="nharamkor__vs_8cpp" startline="514" endline="530">main</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a8e7995ef24cddb91ed4b4d47a03deb4d" compoundref="nharamkor__vs_8cpp" startline="355" endline="383">print</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a3e0f7cbe319cdfbb528b924d817885fd" compoundref="nharamkor__vs_8cpp" startline="329" endline="347">print_module_error</referencedby>
        <referencedby refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a574c4c2ef856e559622c2183daa6a3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">T</ref> &amp;</type>
        <definition>T &amp; lista&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>lista::operator[]</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the element at index i in the lista.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the element to retrieve</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to the element at index i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="19" column="7" bodyfile="lista.cpp" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classlista_1a3f48539cd27ef435ea20315183a7c48e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; T &gt;::add</definition>
        <argsstring>(T ertek)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">T</ref></type>
          <declname>ertek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new element to the linked list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ertek</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be added to the list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="20" column="10" bodyfile="lista.cpp" bodystart="38" bodyend="45"/>
        <referencedby refid="classlista_1aa7190850a17e42ae410130a9260f70ae" compoundref="lista_8cpp" startline="245" endline="252">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1a9922b34e782b64acb0a49ed094235a09" compoundref="lista_8cpp" startline="157" endline="160">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1a4e645a0ec15e70328ca134042d2cb472" compoundref="lista_8cpp" startline="52" endline="55">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classwire__t_1a199d2d627c1f640220818cdcbc21d4fb" compoundref="wire_8cpp" startline="60" endline="62">wire_t::add</referencedby>
        <referencedby refid="classwire__t_1aa2554dfd22a8816510937796d04f7b66" compoundref="wire_8cpp" startline="51" endline="53">wire_t::add</referencedby>
        <referencedby refid="classlista_1a7e56ae1942730012157db8ebd0ba2e72" compoundref="lista_8cpp" startline="229" endline="236">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1aa870ba8bee0571905ddf13989a20771f" compoundref="lista_8cpp" startline="122" endline="129">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classmodule__t_1a1261616ace799b6efe1050be4355e697" compoundref="module_8h" startline="23" endline="23">module_t::add_to_list</referencedby>
        <referencedby refid="classcomp__module__t_1a63951fff0c2c203661e19a86f10d522c" compoundref="comp__module_8cpp" startline="111" endline="135">comp_module_t::comp_fill_module</referencedby>
        <referencedby refid="classwire__t_1a7197d613264ea00f51325b593955c149" compoundref="wire_8cpp" startline="16" endline="24">wire_t::doit</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ab44d8e6ed4c39cb1c0cf792429db848e" compoundref="nharamkor__vs_8cpp" startline="491" endline="508">input_handler</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1af09a2309c4133585955f671c2be21293" compoundref="nharamkor__vs_8cpp" startline="457" endline="478">input_handler_do</referencedby>
        <referencedby refid="text__module_8cpp_1a9529dd0d41184fa0192241df7e922780" compoundref="text__module_8cpp" startline="157" endline="193">muv_list</referencedby>
        <referencedby refid="comp__module_8cpp_1a72fad6f3a585cf1547f2fbcd87ec7a90" compoundref="comp__module_8cpp" startline="31" endline="62">muvcount</referencedby>
        <referencedby refid="classmodule__t_1a57c0215cd97886fdbbf55a59ead9205a" compoundref="module_8cpp" startline="3" endline="9">module_t::set_ki_port</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a079960085332785c1fb971533a9912a9" compoundref="nharamkor__vs_8cpp" startline="206" endline="235">test_module</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a4e645a0ec15e70328ca134042d2cb472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; T &gt;::add</definition>
        <argsstring>(lista&lt; T &gt; &amp;addlist)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">lista</ref>&lt; <ref refid="classlista" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>addlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the elements from the given list to the current list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addlist</parametername>
</parameternamelist>
<parameterdescription>
<para>the list to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="21" column="10" bodyfile="lista.cpp" bodystart="52" bodyend="55"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a5baaf78ac201a75e49f18110daed7fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">size_t</ref></type>
        <definition>size_t lista&lt; T &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <qualifiedname>lista::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the length of the lista.</para>
<para><simplesect kind="return"><para>The length of the lista. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="22" column="12" bodyfile="lista.cpp" bodystart="62" bodyend="66"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <referencedby refid="classlista_1a9922b34e782b64acb0a49ed094235a09" compoundref="lista_8cpp" startline="157" endline="160">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classlista_1a4e645a0ec15e70328ca134042d2cb472" compoundref="lista_8cpp" startline="52" endline="55">lista&lt; T &gt;::add</referencedby>
        <referencedby refid="classshell__module__t_1a4e060254af234565da1f0381e82a4afa" compoundref="shell__module_8cpp" startline="57" endline="62">shell_module_t::add_to_list</referencedby>
        <referencedby refid="classwire__t_1a7197d613264ea00f51325b593955c149" compoundref="wire_8cpp" startline="16" endline="24">wire_t::doit</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1af09a2309c4133585955f671c2be21293" compoundref="nharamkor__vs_8cpp" startline="457" endline="478">input_handler_do</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a28f543ce27108ae4de42d9991865237e" compoundref="nharamkor__vs_8cpp" startline="393" endline="400">input_handler_module</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1aedc7074de3b40368806c1c432f215d92" compoundref="nharamkor__vs_8cpp" startline="429" endline="445">input_handler_write</referencedby>
        <referencedby refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</referencedby>
        <referencedby refid="text__module_8cpp_1a03a0ce27639dfeafbf0b8e3e94741651" compoundref="text__module_8cpp" startline="69" endline="75">lepteto</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a079dcfedb64af966eab0a78d9a4c979d" compoundref="nharamkor__vs_8cpp" startline="175" endline="195">modulesteszt</referencedby>
        <referencedby refid="classlista_1a8d4db93520ace0ab526a9216c6a5752f" compoundref="lista_8cpp" startline="114" endline="119">lista&lt; T &gt;::operator[]</referencedby>
        <referencedby refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</referencedby>
        <referencedby refid="classshell__module__t_1ad51fd55322054ad381801aaeae0bcecb" compoundref="shell__module_8cpp" startline="47" endline="55">shell_module_t::set_be</referencedby>
        <referencedby refid="classtext__module__t_1a316e7ea9bed76e5ef68bbb4cd4da95ef" compoundref="text__module_8cpp" startline="231" endline="238">text_module_t::set_ki</referencedby>
        <referencedby refid="classwire__t_1afb467831d8761cf47e16df0104f6715f" compoundref="wire_8cpp" startline="36" endline="39">wire_t::setin</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1a8394f5d2589de5e083e551414e4d1a92" compoundref="nharamkor__vs_8cpp" startline="57" endline="64">ujmnev_ell</referencedby>
        <referencedby refid="text__module_8cpp_1a5e761d3e1f203f5db1ab8e87710494bf" compoundref="text__module_8cpp" startline="203" endline="230">vegrehajt</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a91e03590c673ff5b3b928acc9dc6275d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; T &gt;::rem</definition>
        <argsstring>(size_t i)</argsstring>
        <name>rem</name>
        <qualifiedname>lista::rem</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes an element at the specified index in the lista object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the element to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="23" column="10" bodyfile="lista.cpp" bodystart="73" bodyend="87"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
        <references refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</references>
        <referencedby refid="nharamkor__vs_8cpp_1af09a2309c4133585955f671c2be21293" compoundref="nharamkor__vs_8cpp" startline="457" endline="478">input_handler_do</referencedby>
        <referencedby refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a12a87ad57faeebe390e6514514dd85a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; T &gt;::din</definition>
        <argsstring>()</argsstring>
        <name>din</name>
        <qualifiedname>lista::din</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function that recursively deletes inner elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="24" column="10" bodyfile="lista.cpp" bodystart="92" bodyend="96"/>
        <references refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" compoundref="lista_8cpp" startline="92" endline="96">lista&lt; T &gt;::din</references>
        <referencedby refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" compoundref="lista_8cpp" startline="92" endline="96">lista&lt; T &gt;::din</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="nharamkor__vs_8cpp" startline="514" endline="530">main</referencedby>
        <referencedby refid="classwire__t_1a9c68e62ee57f625c992ce3b0d3aee94a" compoundref="wire_8cpp" startline="66" endline="68">wire_t::~wire_t</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a10bc0895ed694524a7031254718607ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; T &gt;::dinl</definition>
        <argsstring>()</argsstring>
        <name>dinl</name>
        <qualifiedname>lista::dinl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function that recursively deletes inner lists. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="25" column="10" bodyfile="lista.cpp" bodystart="101" bodyend="105"/>
        <references refid="classlista_1a10bc0895ed694524a7031254718607ed" compoundref="lista_8cpp" startline="101" endline="105">lista&lt; T &gt;::dinl</references>
        <referencedby refid="classlista_1a10bc0895ed694524a7031254718607ed" compoundref="lista_8cpp" startline="101" endline="105">lista&lt; T &gt;::dinl</referencedby>
        <referencedby refid="nharamkor__vs_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="nharamkor__vs_8cpp" startline="514" endline="530">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlista_1a32532b105feb9833f4a17473b82e3554" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lista&lt; T &gt;::~lista</definition>
        <argsstring>()</argsstring>
        <name>~lista</name>
        <qualifiedname>lista::~lista</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ossz.h" line="26" column="5" bodyfile="ossz.h" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classlista_1aac7cb376f5838f4066d942568f76e2f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">size_t</ref></type>
        <definition>size_t lista&lt; size_t &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <qualifiedname>lista::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="108" column="14" bodyfile="lista.cpp" bodystart="108" bodyend="112"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a8d4db93520ace0ab526a9216c6a5752f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">size_t</ref> &amp;</type>
        <definition>size_t &amp; lista&lt; size_t &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>lista::operator[]</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="114" column="14" bodyfile="lista.cpp" bodystart="114" bodyend="119"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1aa870ba8bee0571905ddf13989a20771f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; size_t &gt;::add</definition>
        <argsstring>(size_t ertek)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>ertek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="122" column="12" bodyfile="lista.cpp" bodystart="122" bodyend="129"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1af18653548b66d6fb0cf64f072af2ce5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; size_t &gt;::rem</definition>
        <argsstring>(size_t i)</argsstring>
        <name>rem</name>
        <qualifiedname>lista::rem</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="131" column="12" bodyfile="lista.cpp" bodystart="131" bodyend="145"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
        <references refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a9922b34e782b64acb0a49ed094235a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; module_t * &gt;::add</definition>
        <argsstring>(lista&lt; module_t * &gt; &amp;addlist)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">lista</ref>&lt; <ref refid="classmodule__t" kindref="compound">module_t</ref> * &gt; &amp;</type>
          <declname>addlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="157" column="12" bodyfile="lista.cpp" bodystart="157" bodyend="160"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a63b12e4a060461a5f6ff5d70509d1557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; module_t * &gt;::rem</definition>
        <argsstring>(size_t i)</argsstring>
        <name>rem</name>
        <qualifiedname>lista::rem</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="162" column="12" bodyfile="lista.cpp" bodystart="162" bodyend="176"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
        <references refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" compoundref="lista_8cpp" startline="73" endline="87">lista&lt; T &gt;::rem</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a109c5c3dc7ce61b1af2f9855725d8124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; module_t * &gt;::din</definition>
        <argsstring>()</argsstring>
        <name>din</name>
        <qualifiedname>lista::din</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="208" column="12" bodyfile="lista.cpp" bodystart="208" bodyend="212"/>
        <references refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" compoundref="lista_8cpp" startline="92" endline="96">lista&lt; T &gt;::din</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1aed76a25ed6b3baa557e090ef61438e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">size_t</ref></type>
        <definition>size_t lista&lt; prot_module_t * &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <qualifiedname>lista::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="215" column="14" bodyfile="lista.cpp" bodystart="215" bodyend="219"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1aea0369b980fb015afed0ff316c99aa23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprot__module__t" kindref="compound">prot_module_t</ref> *&amp;</type>
        <definition>prot_module_t *&amp; lista&lt; prot_module_t * &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>lista::operator[]</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="221" column="21" bodyfile="lista.cpp" bodystart="221" bodyend="226"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a7e56ae1942730012157db8ebd0ba2e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; prot_module_t * &gt;::add</definition>
        <argsstring>(prot_module_t *ertek)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classprot__module__t" kindref="compound">prot_module_t</ref> *</type>
          <declname>ertek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="229" column="12" bodyfile="lista.cpp" bodystart="229" bodyend="236"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a36d2b975e1455b85f06856f3521eeb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; prot_module_t * &gt;::din</definition>
        <argsstring>()</argsstring>
        <name>din</name>
        <qualifiedname>lista::din</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="238" column="12" bodyfile="lista.cpp" bodystart="238" bodyend="242"/>
        <references refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" compoundref="lista_8cpp" startline="92" endline="96">lista&lt; T &gt;::din</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1aa7190850a17e42ae410130a9260f70ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; char * &gt;::add</definition>
        <argsstring>(char *ertek)</argsstring>
        <name>add</name>
        <qualifiedname>lista::add</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">char</ref> *</type>
          <declname>ertek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="245" column="12" bodyfile="lista.cpp" bodystart="245" bodyend="252"/>
        <references refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" compoundref="lista_8cpp" startline="38" endline="45">lista&lt; T &gt;::add</references>
        <references refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" compoundref="ossz_8h" startline="18" endline="18">lista&lt; T &gt;::lista</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a6139219e2eff257c10414e9e342cc7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">size_t</ref></type>
        <definition>size_t lista&lt; char * &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <qualifiedname>lista::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="254" column="14" bodyfile="lista.cpp" bodystart="254" bodyend="258"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a1646f73a271e2c94eba918e5231fc28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">char</ref> *&amp;</type>
        <definition>char *&amp; lista&lt; char * &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>lista::operator[]</qualifiedname>
        <param>
          <type><ref refid="classlista" kindref="compound">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="260" column="12" bodyfile="lista.cpp" bodystart="260" bodyend="265"/>
        <references refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" compoundref="lista_8cpp" startline="62" endline="66">lista&lt; T &gt;::length</references>
      </memberdef>
      <memberdef kind="function" id="classlista_1a1de4c9370b8ac96048341832f6a981e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlista" kindref="compound">void</ref></type>
        <definition>void lista&lt; char * &gt;::dinl</definition>
        <argsstring>()</argsstring>
        <name>dinl</name>
        <qualifiedname>lista::dinl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lista.cpp" line="267" column="12" bodyfile="lista.cpp" bodystart="267" bodyend="271"/>
        <references refid="classlista_1a10bc0895ed694524a7031254718607ed" compoundref="lista_8cpp" startline="101" endline="105">lista&lt; T &gt;::dinl</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ossz.h" line="13" column="1" bodyfile="ossz.h" bodystart="13" bodyend="29"/>
    <listofallmembers>
      <member refid="classlista_1a3f48539cd27ef435ea20315183a7c48e" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1a4e645a0ec15e70328ca134042d2cb472" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1aa870ba8bee0571905ddf13989a20771f" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1a9922b34e782b64acb0a49ed094235a09" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1a7e56ae1942730012157db8ebd0ba2e72" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1aa7190850a17e42ae410130a9260f70ae" prot="public" virt="non-virtual"><scope>lista</scope><name>add</name></member>
      <member refid="classlista_1a12a87ad57faeebe390e6514514dd85a7" prot="public" virt="non-virtual"><scope>lista</scope><name>din</name></member>
      <member refid="classlista_1a109c5c3dc7ce61b1af2f9855725d8124" prot="public" virt="non-virtual"><scope>lista</scope><name>din</name></member>
      <member refid="classlista_1a36d2b975e1455b85f06856f3521eeb6a" prot="public" virt="non-virtual"><scope>lista</scope><name>din</name></member>
      <member refid="classlista_1a10bc0895ed694524a7031254718607ed" prot="public" virt="non-virtual"><scope>lista</scope><name>dinl</name></member>
      <member refid="classlista_1a1de4c9370b8ac96048341832f6a981e8" prot="public" virt="non-virtual"><scope>lista</scope><name>dinl</name></member>
      <member refid="classlista_1a1662927cc34d5705fca82b562b6cc9db" prot="private" virt="non-virtual"><scope>lista</scope><name>elem</name></member>
      <member refid="classlista_1ab9adc555787a1f3ae0c702c7f346f913" prot="private" virt="non-virtual"><scope>lista</scope><name>getin</name></member>
      <member refid="classlista_1a5baaf78ac201a75e49f18110daed7fd6" prot="public" virt="non-virtual"><scope>lista</scope><name>length</name></member>
      <member refid="classlista_1aac7cb376f5838f4066d942568f76e2f8" prot="public" virt="non-virtual"><scope>lista</scope><name>length</name></member>
      <member refid="classlista_1aed76a25ed6b3baa557e090ef61438e34" prot="public" virt="non-virtual"><scope>lista</scope><name>length</name></member>
      <member refid="classlista_1a6139219e2eff257c10414e9e342cc7cc" prot="public" virt="non-virtual"><scope>lista</scope><name>length</name></member>
      <member refid="classlista_1adfa22c0202d7ac7abfe006dbd3b5a12a" prot="public" virt="non-virtual"><scope>lista</scope><name>lista</name></member>
      <member refid="classlista_1ad0b6abe961976a78f19b24f5f41fc348" prot="private" virt="non-virtual"><scope>lista</scope><name>next</name></member>
      <member refid="classlista_1a574c4c2ef856e559622c2183daa6a3d8" prot="public" virt="non-virtual"><scope>lista</scope><name>operator[]</name></member>
      <member refid="classlista_1a8d4db93520ace0ab526a9216c6a5752f" prot="public" virt="non-virtual"><scope>lista</scope><name>operator[]</name></member>
      <member refid="classlista_1aea0369b980fb015afed0ff316c99aa23" prot="public" virt="non-virtual"><scope>lista</scope><name>operator[]</name></member>
      <member refid="classlista_1a1646f73a271e2c94eba918e5231fc28d" prot="public" virt="non-virtual"><scope>lista</scope><name>operator[]</name></member>
      <member refid="classlista_1a91e03590c673ff5b3b928acc9dc6275d" prot="public" virt="non-virtual"><scope>lista</scope><name>rem</name></member>
      <member refid="classlista_1af18653548b66d6fb0cf64f072af2ce5f" prot="public" virt="non-virtual"><scope>lista</scope><name>rem</name></member>
      <member refid="classlista_1a63b12e4a060461a5f6ff5d70509d1557" prot="public" virt="non-virtual"><scope>lista</scope><name>rem</name></member>
      <member refid="classlista_1a32532b105feb9833f4a17473b82e3554" prot="public" virt="non-virtual"><scope>lista</scope><name>~lista</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
