<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtext__module__t" xml:lang="en-US">
<title>text_module_t Class Reference</title>
<indexterm><primary>text_module_t</primary></indexterm>
<para>
<computeroutput>#include &lt;text_module.h&gt;</computeroutput>
</para>
Inheritance diagram for text_module_t:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for text_module_t:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtext__module__t_1a0005ad3d2530fb2880040ecc0b04cdf7">text_module_t</link> (<link linkend="_classlista">const</link> <link linkend="_classlista">char</link> *parancsok)</para>
</listitem>
            <listitem><para><link linkend="_classtext__module__t_1ab587f38fd7f0b7970abbd63550dfa252">text_module_t</link> (<link linkend="_classlista">const</link> <link linkend="_classtext__module__t">text_module_t</link> &amp;<link linkend="_classlista">refe</link>)</para>
</listitem>
            <listitem><para><link linkend="_classmodule__t">module_t</link> * <link linkend="_classtext__module__t_1aaf977a7392dec08258e5e7dcee94f6a1">copy</link> () <link linkend="_classlista">override</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">void</link> <link linkend="_classtext__module__t_1a85cea3d8a0adb3b18631c8f1a9f249ff">vegrehajtas</link> (<link linkend="_classlista">lista</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &amp;<link linkend="_classlista">wait_for_do</link>) <link linkend="_classlista">override</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">void</link> <link linkend="_classtext__module__t_1a316e7ea9bed76e5ef68bbb4cd4da95ef">set_ki</link> (<link linkend="_classlista">size_t</link> <link linkend="_classlista">index</link>, <link linkend="_classlista">uint8_t</link> ertek, <link linkend="_classlista">lista</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &amp;<link linkend="_classlista">wait_for_do</link>)</para>
</listitem>
            <listitem><para><link linkend="_classtext__module__t_1a1cf4972e177e238c9bf5968e5adb2c0c">~text_module_t</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classmodule__t">module_t</link>        <itemizedlist>
            <listitem><para><link linkend="_classmodule__t_1a37273f61cb094f04a2d42f519a498d68">module_t</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classlista">void</link> <link linkend="_classmodule__t_1a1261616ace799b6efe1050be4355e697">add_to_list</link> (<link linkend="_classlista">lista</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &amp;<link linkend="_classlista">wait_for_do</link>, <link linkend="_classlista">size_t</link> <link linkend="_classlista">be</link>)</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classlista">void</link> <link linkend="_classmodule__t_1a67f5c31043ebfd97506f367b83b02f14">set_be</link> (<link linkend="_classlista">size_t</link> <link linkend="_classlista">index</link>, <link linkend="_classlista">uint8_t</link> ertek)</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classlista">void</link> <link linkend="_classmodule__t_1a57c0215cd97886fdbbf55a59ead9205a">set_ki_port</link> (<link linkend="_classlista">size_t</link> <link linkend="_classlista">ki_index</link>, <link linkend="_classmodule__t">module_t</link> *modulep, <link linkend="_classlista">size_t</link> <link linkend="_classlista">be_index</link>)</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classlista">size_t</link> <link linkend="_classmodule__t_1a5bfb7a115938e38ae555af4c83bb431c">get_ki_num</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classlista">uint8_t</link> <link linkend="_classmodule__t_1a74f223430fdcfa4e8cb9b143b29dab5d">get_ki_ertek</link> (<link linkend="_classlista">size_t</link> <link linkend="_classlista">i</link>)</para>
</listitem>
            <listitem><para><link linkend="_classlista">size_t</link> <link linkend="_classmodule__t_1a3986b0f8ab95dbccec8616f2196e7bba">get_be_num</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classlista">uint8_t</link> <link linkend="_classmodule__t_1afc483f4ee25f18ae47b5b1bdad294785">get_be_ertek</link> (<link linkend="_classlista">size_t</link> <link linkend="_classlista">i</link>)</para>
</listitem>
            <listitem><para><link linkend="_classlista">virtual</link> <link linkend="_classmodule__t_1a74181e5ee6b99a623d75ce02304c1340">~module_t</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_classmodule__t">module_t</link>        <itemizedlist>
            <listitem><para><link linkend="_classlista">size_t</link> <link linkend="_classmodule__t_1a9d7892f6fee300c9b7c1c0fc7da54232">be_db</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">size_t</link> <link linkend="_classmodule__t_1a525593566e11dc7186152b4770e12253">ki_db</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">uint8_t</link> * <link linkend="_classmodule__t_1a7d61b23e49096510cf223ffbced16f5f">be_ertek</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">uint8_t</link> * <link linkend="_classmodule__t_1ac1bf5bb87b1ce8e261399e50e2a7780a">ki_ertek</link></para>
</listitem>
            <listitem><para><link linkend="_classlista">lista</link>&lt; <link linkend="_structport">port</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &gt; * <link linkend="_classmodule__t_1a7e972df261abe0ad96181db1f0f004d5">ki_ports</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtext__module__t_1a0005ad3d2530fb2880040ecc0b04cdf7"/><section>
    <title>text_module_t()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>text_module_t</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>text_module_t</secondary></indexterm>
<para><computeroutput>text_module_t::text_module_t (<link linkend="_classlista">const</link> <link linkend="_classlista">char</link> * parancsok)</computeroutput></para>
<para>Constructor for <link linkend="_classtext__module__t">text_module_t</link> class that initializes the variables based on the input command string.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>parancsok</entry><entry>
<para>The command string used to initialize the <link linkend="_classtext__module__t">text_module_t</link> object </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t_a0005ad3d2530fb2880040ecc0b04cdf7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtext__module__t_1ab587f38fd7f0b7970abbd63550dfa252"/><section>
    <title>text_module_t()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>text_module_t</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>text_module_t</secondary></indexterm>
<para><computeroutput>text_module_t::text_module_t (<link linkend="_classlista">const</link> <link linkend="_classtext__module__t">text_module_t</link> &amp; refe)</computeroutput></para></section>
<anchor xml:id="_classtext__module__t_1a1cf4972e177e238c9bf5968e5adb2c0c"/><section>
    <title>~text_module_t()</title>
<indexterm><primary>~text_module_t</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>~text_module_t</secondary></indexterm>
<para><computeroutput>text_module_t::~text_module_t ( )</computeroutput></para>
<para>Destructor for the <link linkend="_classtext__module__t">text_module_t</link> class. Deletes the dynamically allocated memory. </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtext__module__t_1aaf977a7392dec08258e5e7dcee94f6a1"/><section>
    <title>copy()</title>
<indexterm><primary>copy</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>copy</secondary></indexterm>
<para><computeroutput><link linkend="_classmodule__t">module_t</link> * text_module_t::copy ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classmodule__t_1ac55b2034283f3488767d6c110ddad55d">module_t</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t_aaf977a7392dec08258e5e7dcee94f6a1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtext__module__t_1a316e7ea9bed76e5ef68bbb4cd4da95ef"/><section>
    <title>set_ki()</title>
<indexterm><primary>set_ki</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>set_ki</secondary></indexterm>
<para><computeroutput><link linkend="_classlista">void</link> text_module_t::set_ki (<link linkend="_classlista">size_t</link> index, <link linkend="_classlista">uint8_t</link> ertek, <link linkend="_classlista">lista</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &amp; wait_for_do)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t_a316e7ea9bed76e5ef68bbb4cd4da95ef_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t_a316e7ea9bed76e5ef68bbb4cd4da95ef_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtext__module__t_1a85cea3d8a0adb3b18631c8f1a9f249ff"/><section>
    <title>vegrehajtas()</title>
<indexterm><primary>vegrehajtas</primary><secondary>text_module_t</secondary></indexterm>
<indexterm><primary>text_module_t</primary><secondary>vegrehajtas</secondary></indexterm>
<para><computeroutput><link linkend="_classlista">void</link> text_module_t::vegrehajtas (<link linkend="_classlista">lista</link>&lt; <link linkend="_classmodule__t">module_t</link> * &gt; &amp; wait_for_do)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Executes the logic for vegrehajtas.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>wait_for_do</entry><entry>
<para>list of <link linkend="_classwire__t">wire_t</link> pointers to wires, waiting to be processed </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classmodule__t_1ab299b7a5380d778a6c6d9d78285c837e">module_t</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtext__module__t_a85cea3d8a0adb3b18631c8f1a9f249ff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
<link linkend="_text__module_8h">text_module.h</link><link linkend="_text__module_8cpp">text_module.cpp</link></section>
</section>
